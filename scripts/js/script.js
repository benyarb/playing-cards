// Generated by CoffeeScript 1.3.1
(function() {
  var i, root, _nextId;

  root = typeof exports !== "undefined" && exports !== null ? exports : this;

  if (root.App == null) {
    root.App = {};
  }

  if (App.Models == null) {
    App.Models = {};
  }

  App.Models.Rank = (function() {

    function Rank(value) {
      this.value = value;
    }

    Rank.prototype.letter = function() {
      return 'A23456789TJQK'.charAt(this.value);
    };

    Rank.prototype.nextLower = function() {
      if (this.value === 0) {
        return null;
      } else {
        return App.Models.ranks[this.value - 1];
      }
    };

    Rank.prototype.nextHigher = function() {
      if (this.value === 12) {
        return null;
      } else {
        return App.Models.ranks[this.value + 1];
      }
    };

    return Rank;

  })();

  App.Models.Suit = (function() {

    function Suit(value) {
      this.value = value;
    }

    Suit.prototype.letter = function() {
      return 'CDHS'.charAt(this.value);
    };

    Suit.prototype.color = function() {
      if (this.letter() === 'C' || this.letter() === 'S') {
        return 'black';
      } else {
        return 'red';
      }
    };

    Suit.prototype.name = function() {
      if (this.letter() === 'C') {
        return 'clubs';
      } else if (this.letter() === 'D') {
        return 'diams';
      } else if (this.letter() === 'H') {
        return 'hearts';
      } else {
        return 'spades';
      }
    };

    return Suit;

  })();

  App.Models.ranks = (function() {
    var _i, _results;
    _results = [];
    for (i = _i = 0; _i < 13; i = ++_i) {
      _results.push(new App.Models.Rank(i));
    }
    return _results;
  })();

  App.Models.suits = (function() {
    var _i, _results;
    _results = [];
    for (i = _i = 0; _i < 4; i = ++_i) {
      _results.push(new App.Models.Suit(i));
    }
    return _results;
  })();

  _nextId = 0;

  App.Models.Card = (function() {

    function Card(rank, suit) {
      this.rank = rank;
      this.suit = suit;
      this.id = "id" + (_nextId++);
    }

    return Card;

  })();

  App.Models.Game = (function() {

    function Game(numberOfPlayers) {
      var i;
      this.numberOfPlayers = numberOfPlayers != null ? numberOfPlayers : 4;
      this.players = (function() {
        var _i, _ref, _results;
        _results = [];
        for (i = _i = 0, _ref = this.numberOfPlayers; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {
          _results.push([]);
        }
        return _results;
      }).call(this);
      this.deck = _.shuffle(this.createDeck());
    }

    Game.prototype.deal = function() {
      var deckCopy, i, spareCards, _i, _ref;
      deckCopy = this.deck.slice(0);
      spareCards = deckCopy.length % this.numberOfPlayers;
      while (deckCopy.length - spareCards) {
        for (i = _i = 0, _ref = this.players.length; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {
          this.players[i].push(deckCopy.pop());
        }
      }
      this.spareCards = deckCopy;
      return this.players;
    };

    Game.prototype.createDeck = function() {
      var rank, suit;
      return _.flatten((function() {
        var _i, _len, _ref, _results;
        _ref = App.Models.suits;
        _results = [];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          suit = _ref[_i];
          _results.push((function() {
            var _j, _len1, _ref1, _results1;
            _ref1 = App.Models.ranks;
            _results1 = [];
            for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
              rank = _ref1[_j];
              _results1.push(new App.Models.Card(rank, suit));
            }
            return _results1;
          })());
        }
        return _results;
      })());
    };

    return Game;

  })();

  if (App.Views == null) {
    App.Views = {};
  }

  App.rootElement = '#card-table';

  App.Views.table = "    <% _.each(hands, function(hand, player) { %>      <div class='well span5'>        <h2>Player <%= player + 1 %></h2>                <div class='hand'>          <% _.each(hand, function(card) { %>            <span class='card <%= card.suit.name() %>'>              <span class='rank'><%= card.rank.letter() %></span>              <span class='suit'>&<%= card.suit.name() %>;</span>            </span>          <% }); %>        </div>      </div>    <% }); %>  ";

  if (App.Controllers == null) {
    App.Controllers = {};
  }

  App.Controllers.Play = (function() {

    function Play(numberOfPlayers) {
      this.numberOfPlayers = numberOfPlayers != null ? numberOfPlayers : 4;
      this.model = new App.Models.Game(this.numberOfPlayers);
      this.hands = this.model.deal();
      this.rootElement = $(App.rootElement)[0];
      this.view = App.Views.table;
    }

    Play.prototype.setupTable = function() {
      $(this.rootElement).empty();
      this.table = _.template(this.view, {
        hands: this.hands
      });
      return $(this.rootElement).append(this.table);
    };

    return Play;

  })();

  $(function() {
    return $('#play').click(function() {
      var game, players;
      players = $('#choose-players').val();
      game = new App.Controllers.Play(players);
      return game.setupTable();
    });
  });

}).call(this);
